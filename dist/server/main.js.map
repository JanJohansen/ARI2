{"version":3,"sources":["main.ts"],"names":[],"mappings":";AAAA,iCAAiD,kBAAkB,CAAC,CAAA;AAEpE,+BAAqB,gBAAgB,CAAC,CAAA;AAEtC,+BAAc,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;AACxC,+BAAc,CAAC,SAAS,CAAC,IAAI,iCAAgB,CAAC,EAAC,SAAS,EAAE,IAAI,EAAC,CAAC,CAAC,CAAC;AAClE;;KAEK;AACL,IAAI,GAAG,GAAG,+BAAc,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;AAEpD,sBAAsB;AACtB,8BAA8B;AAE9B,uBAAuB;AACvB,IAAI,QAAQ,GAAG,IAAI,sBAAQ,EAAE,CAAC;AAC9B,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;AACvB,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,CAAC,CAAC;AAElC,yBAAyB;AAEzB,iDAAiD;AACjD,kDAAkD;AAClD,4CAA4C;AAE5C,uDAAuD","file":"main.js","sourcesContent":["import { loggingService, consoleLogWriter } from './loggingService';\r\nimport { httpServer } from './httpServer';\r\nimport Executor from './nodeExecutor';\r\n\r\nloggingService.setDefaultLevel(\"trace\");\r\nloggingService.addWriter(new consoleLogWriter({timestamp: true}));\r\n/*loggingService.on(\"Main\", (logger, level, ...args) => {\r\n    console.log(\"SpecialLog:\", logger.name, ...args);\r\n});*/\r\nvar log = loggingService.getLogger(\"Main\", \"trace\");\r\n\r\n// Start httpServer...\r\n//let http = new httpServer();\r\n\r\n// Test ---------------\r\nlet executor = new Executor();\r\nlog.info(\"Functions:\");\r\nlog.info(executor.getFunctions());\r\n\r\n// Usage ----------------\r\n\r\n//import * as library.miscLib from './miscLib.ts'\r\n//let cons = new library.consoleWriter(new uid());\r\n//let and = new library.logicAnd(new uid());\r\n\r\n//nodeExecutor.connect(cons.inputs[1], and.outputs[0]);\r\n"],"sourceRoot":"/source/"}